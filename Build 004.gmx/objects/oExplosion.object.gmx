<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>5</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Damage = 0;
hittype = 0;
playerweapon = 0;
myid = -1;
// Diffuser stuff.
diffuser = 0;
expl = -1;
numexp = 11;
area = 40;
rate = 1;
dest = 0;
blend = c_white;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (diffuser)
{
    var es,blend;
    switch (myid)
    {
        case Weapons.wPowerBeam:
            es = sprBeamExplosion1;
            blend = c_yellow;
            break;
        case Weapons.wWaveBeam:
            es = sprBeamExplosion1;
            blend = c_purple;
            break;
        case Weapons.wPlasmaBeam:
            es = sprPlasmaExplosion;
            blend = c_orange;
            break;
        case Weapons.wSpazerBeam:
            es = sprBeamExplosion1;
            blend = c_lime;
            break;
        case Weapons.wIceBeam:
            es = sprBeamExplosion1;
            blend = make_color_rgb(94,174,255);;
            break;
        case Weapons.wRuptureBeam:
            es = sprBeamExplosion2;
            blend = c_orange;
            break;
        case Weapons.wPhazonBeam:
            es = sprBeamExplosion3;
            blend = c_blue;
            break;
    }
    //scProjectileLight(.4,c_white,c_yellow,.6);
    var xx = x+random_range(area,-area);
    var yy = y+random_range(area,-area);
    expl = instance_create(xx,yy,oDestroyAnim);
    expl.sprite_index = es;
    expl.image_alpha = 0.8;
    expl.image_blend = blend;
    expl.image_speed = 0.1+random(0.15);
    expl.image_angle = random(360);
    expl.cbdiff = true;
    /*
    switch (expl)
    {
        case objPowerBeamExplosion:
            with (b) Impact(sprPowerFlak,7);
            break;
        case objWaveBeamExplosion:
            with (b)
                { Impact(sprWaveFlak,4); image_angle = random(360); }
            break;
        case objPlasmaBeamExplosion:
            with (b) Impact(sprPlasmaFlak,7);
            break;
        case objSpazerBeamExplosion:
            with (b) Impact(sprSpazerFlak,7);
            break;
        case objIceBeamExplosion:
            with (b) Impact(sprIceFlak,7);
            break;
        case objNovaBeamExplosion:
            with (b) Impact(sprNovaFlak,7);
            break;
        case objDarkBeamExplosion:
            with (b) Impact(sprDarkFlak,7);
            break;
        case objLightBeamExplosion:
            b.sprite_index = sprLightBeamExplosionLarge;
            with (b) Impact(sprLightFlak,7);
            break;
        case objPhazonBeamExplosion:
            with (b) Impact(sprPhazonFlak,7);
            break;
    }
    */
    if (dest &lt; numexp) dest += 1;
    else instance_destroy();
    image_xscale += 0.04;
    image_yscale = image_xscale;
    image_angle = random(360);
    if (image_alpha &gt; 0) image_alpha -= 0.04;
    else instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oDoorParent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scDoorHit(hittype,other);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oActor">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (other.CantTakeDamageFrom != id)
{
    other.HitPoints -= Damage;
    other.TakeHitDirection = point_direction(x,y,other.x,other.y);
    other.CantTakeDamageFrom = id;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!diffuser) exit;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
