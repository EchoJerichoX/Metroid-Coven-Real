<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
systembs = part_system_create();
part_system_depth(systembs,-20);
burstbs = part_type_create();
emitterbs = part_emitter_create(systembs);
c = 1;
ch = 1;
alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>part_type_destroy(burstbs);
part_emitter_destroy(systembs,emitterbs);
part_system_destroy(systembs);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch (myid)
{
// --- Player arm cannon firing effects ---
    case Weapons.wPowerBeam:
        part_emitter_burst(systembs,emitterbs,burstbs,round(random(3))+3*ch); break;
    case Weapons.wWaveBeam:
        part_emitter_burst(systembs,emitterbs,burstbs,round(random(4))+2*ch); break;
    case Weapons.wPlasmaBeam:
        part_emitter_burst(systembs,emitterbs,burstbs,round(random(5))+3*ch); break;
    case Weapons.wSpazerBeam:
        part_emitter_burst(systembs,emitterbs,burstbs,round(random(2))+2*ch); break;
    case Weapons.wPulseBeam:
        part_emitter_burst(systembs,emitterbs,burstbs,round(random(2))+2); break;
    case Weapons.wIceBeam: 
        part_emitter_burst(systembs,emitterbs,burstbs,round(random(4))+3*ch); break;
    case Weapons.wRuptureBeam:
        part_emitter_burst(systembs,emitterbs,burstbs,round(random(3))+2*ch); break;
    case Weapons.wPhazonBeam:
        part_emitter_burst(systembs,emitterbs,burstbs,round(random(6))+4*ch); break;
}
alarm[2] = 120;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (c = 1) ch = 3;
else ch = 1;
switch (myid)
{
// --- Player arm cannon firing effects ---
    case Weapons.wPowerBeam:
        part_type_shape(burstbs,pt_shape_pixel);
        part_type_color1(burstbs,c_yellow);
        part_type_size(burstbs,0.5,1,0,0);
        part_type_life(burstbs,7*ch,14*ch);
        part_type_speed(burstbs,1,2,0,0);
        part_type_alpha3(burstbs,1,1,0);
        part_type_direction(burstbs,0,360,0,0);
        break;
    case Weapons.wWaveBeam:
        part_type_shape(burstbs,pt_shape_circle);
        part_type_color1(burstbs,c_purple);
        part_type_size(burstbs,0.1,0.2,0,0);
        part_type_life(burstbs,15*ch,30*ch);
        part_type_speed(burstbs,0.5,1,0,0);
        part_type_alpha3(burstbs,1,1,0);
        part_type_direction(burstbs,0,360,random_range(-5,5),0);
        break;
    case Weapons.wPlasmaBeam:
        part_type_shape(burstbs,pt_shape_disk);
        part_type_color3(burstbs,c_yellow,c_orange,c_red);
        part_type_size(burstbs,0.05,0.1,0,0);
        part_type_life(burstbs,20*ch,40*ch);
        part_type_speed(burstbs,0.5,1,0,0);
        part_type_alpha3(burstbs,1,1,0);
        part_type_direction(burstbs,0,360,0,0);
        break;
    case Weapons.wSpazerBeam:
        part_type_shape(burstbs,pt_shape_pixel);
        part_type_color2(burstbs,c_lime,c_green);
        part_type_size(burstbs,0.5,1,0,0);
        part_type_life(burstbs,15*ch,30*ch);
        part_type_speed(burstbs,0.5,1,0,0);
        part_type_alpha3(burstbs,1,1,0);
        part_type_direction(burstbs,0,360,0,0);
        break;
    case Weapons.wPulseBeam:
        part_type_shape(burstbs,pt_shape_pixel);
        part_type_color2(burstbs,make_color_rgb(0,255,255),make_color_rgb(0,200,200));
        part_type_size(burstbs,0.5,1,0,0);
        part_type_life(burstbs,10,20);
        part_type_speed(burstbs,1,2,0,0);
        part_type_alpha3(burstbs,1,1,0);
        part_type_direction(burstbs,0,360,0,0);
        break;
    case Weapons.wIceBeam:
        part_type_shape(burstbs,pt_shape_star);
        part_type_color3(burstbs,make_color_rgb(94,174,255),make_color_rgb(94,174,255),c_navy);
        part_type_size(burstbs,0.05,0.1,0,0);
        part_type_life(burstbs,25*ch,50*ch);
        part_type_speed(burstbs,0.5,1,-0.005,0);
        part_type_alpha3(burstbs,1,1,0);
        part_type_direction(burstbs,0,360,0,0);
        part_type_orientation(burstbs,0,360,choose(1,-1),0,1);
        break;
    case Weapons.wRuptureBeam:
        part_type_shape(burstbs,pt_shape_spark);
        part_type_color1(burstbs,c_orange);
        part_type_size(burstbs,0.1,0.3,0,0);
        part_type_life(burstbs,15*ch,25*ch);
        part_type_speed(burstbs,0.5,1,0,0);
        part_type_alpha3(burstbs,1,1,0);
        part_type_direction(burstbs,0,360,0,0);
        break;
    case Weapons.wPhazonBeam:
        part_type_shape(burstbs,pt_shape_pixel);
        part_type_color2(burstbs,c_blue,c_navy);
        part_type_size(burstbs,0.5,1.5,0,0);
        part_type_life(burstbs,10*ch,20*ch);
        part_type_speed(burstbs,0.5,1,0,0);
        part_type_alpha3(burstbs,1,1,0);
        part_type_direction(burstbs,0,360,0,0);
        break;
}
part_emitter_region(systembs,emitterbs,x,x,y,y,ps_shape_rectangle,ps_distr_linear);
alarm[1] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
