<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprEnergyStationBaseIdle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>8</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//New Stuff
instance_create(x,y,objEnergyStationScan);
instance_create(x,y,LightMedium);

//Other variables.
midsparkarearadius = 10;
sparknum = 1;
sparks = 0;
active = false;
laseralpha = 0;
give = 0;

//Common variables.
distance = 26;
minorbspeed = .5;
maxorbspeed = 12;
orbspeed = 1;
orbaccel = .2;

//Projector 1.
xx1 = 0;
yy1 = 0;
orbstep1 = random(360);

//Absorber 1.
xx2 = 0;
yy2 = 0;
orbstep2 = orbstep1+180;

//Projector 2.
xx3 = 0;
yy3 = 0;
orbstep3 = orbstep1+90;

//Absorber 2.
xx4 = 0;
yy4 = 0;
orbstep4 = orbstep1+270;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>orbstep1 += orbspeed;
orbstep2 += orbspeed;
orbstep3 += orbspeed;
orbstep4 += orbspeed;

xx1 = x+lengthdir_x(distance,orbstep1); 
yy1 = y+lengthdir_y(distance,orbstep1);

xx2 = x+lengthdir_x(distance,orbstep2); 
yy2 = y+lengthdir_y(distance,orbstep2);

xx3 = x+lengthdir_x(distance,orbstep3); 
yy3 = y+lengthdir_y(distance,orbstep3);

xx4 = x+lengthdir_x(distance,orbstep4); 
yy4 = y+lengthdir_y(distance,orbstep4);

if (collision_circle(x,y,9,objPlayer,1,0))
{
    if (health &lt; global.maxhealth)
    or (global.etanks &lt; global.maxetanks)
        { active = true; }
    else active = false;
}
else active = false; 

if (active) then
{
    if (orbspeed != maxorbspeed) orbspeed += orbaccel;
    if (orbspeed &gt;= maxorbspeed) orbspeed = maxorbspeed;
    if (orbspeed = maxorbspeed) sparknum = 3;
    give += 1;
    if (give &gt;= 3) then
        { give = 0; global.gainhealth += 5; }
    global.inenergystation = true;
    if (!instance_exists(objPlayerFlashEnergy)) instance_create(other.x,other.y,objPlayerFlashEnergy);
}
else 
{ 
    if (orbspeed != minorbspeed) orbspeed -= orbaccel/3; 
    if (orbspeed &lt;= minorbspeed) orbspeed = minorbspeed;
    global.inenergystation = false;
    give = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Draw self.
depth = 8;
if (active = false) sprite_index = sprEnergyStationBaseIdle;
else sprite_index = sprEnergyStationBaseFlash;
draw_sprite(sprite_index,-1,x,y);
depth = 0;
//Draw the sparks if they are active.
if (active) then
{
    if (laseralpha != 1) laseralpha += .04; 
    if (laseralpha &gt;= 1) laseralpha = 1;
    
    //Omitted block for creating sparks at projectors' locations.
    /*if (sparks &lt; 4) sparks += choose(.5,1,1.5);
    if (sparks &gt;= 4)
    { 
        sparks = 0;
        if (laseralpha &gt; .4) then
        {
            repeat (sparknum)
            {
                instance_create(xx1,yy1,objBlueSpark);
                instance_create(xx2,yy2,objBlueSpark);
                instance_create(xx3,yy3,objBlueSpark);
                instance_create(xx4,yy4,objBlueSpark);
            }
        }
    }*/
    repeat (sparknum)
    {
        var ranx,rany;
        ranx = x-midsparkarearadius+random(midsparkarearadius*2);
        rany = y-midsparkarearadius+random(midsparkarearadius*2);
        a = instance_create(ranx,rany,objBlueSpark2); 
        a.image_alpha = laseralpha;
    }
}
else
{
    if (laseralpha != 0) laseralpha -= .08; 
    if (laseralpha &lt;= 0) laseralpha = 0;
}

depth = 0;
//Draw the beams. Visibility is based on the laseralpha variable as opposed to whether or not the station is activated.
draw_sprite_ext(sprEnergyStationBeam,-1,xx1,yy1,1,1,point_direction(xx1,yy1,xx2,yy2),c_white,laseralpha);
draw_sprite_ext(sprEnergyStationBeam,-1,xx2,yy2,1,1,point_direction(xx2,yy2,xx1,yy1),c_white,laseralpha);
draw_sprite_ext(sprEnergyStationBeam,-1,xx3,yy3,1,1,point_direction(xx3,yy3,xx4,yy4),c_white,laseralpha);
draw_sprite_ext(sprEnergyStationBeam,-1,xx4,yy4,1,1,point_direction(xx4,yy4,xx3,yy3),c_white,laseralpha);

//Draw the projectors.
draw_sprite_ext(sprEnergyStationProjector,-1,xx1,yy1,1,1,point_direction(xx1,yy1,xx2,yy2),c_white,1);
draw_sprite_ext(sprEnergyStationProjector,-1,xx2,yy2,1,1,point_direction(xx2,yy2,xx1,yy1),c_white,1);
draw_sprite_ext(sprEnergyStationProjector,-1,xx3,yy3,1,1,point_direction(xx3,yy3,xx4,yy4),c_white,1);
draw_sprite_ext(sprEnergyStationProjector,-1,xx4,yy4,1,1,point_direction(xx4,yy4,xx3,yy3),c_white,1);
depth = 8;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
