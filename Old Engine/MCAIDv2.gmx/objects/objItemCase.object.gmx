<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprItemCase</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>6</depth>
  <persistent>0</persistent>
  <parentName>BlockParent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dynamic = true;
image_speed = .5;
alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="9">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.highest!=id) exit;
global.highest=0;
if (global.itemcasescanned) then
{
   with (instance_create(0,0,messageGenScan)) text = globalitemcasescan1;
}
if (!global.itemcasescanned) then
{
   sound_play(DataRec);
   global.itemcasescanned = true;
   with (instance_create(0,0,messageGenScan))  text = global.itemcasescan2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>DespawnItemCase();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="ALLWEAPParent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch (item)
{
    // - Items. -
    case 2: instance_create(x,y,objMorphBall); break;
    case 3: instance_create(x,y,objBombItem); break;
    case 4: instance_create(x,y,objMissileLauncher); break;
    case 5: instance_create(x,y,objWaveBeam); break;
    case 6: instance_create(x,y,objSuperMissileLauncher); break;
    case 7: instance_create(x,y,objGravitySuit); break;
    case 8: instance_create(x,y,objPlasmaBeam); break;
    case 9: instance_create(x,y,objSpazerBeam); break;
    case 10: instance_create(x,y,objPulseBeam); break;
    case 11: instance_create(x,y,objPhazonSuit); break;
    case 12: instance_create(x,y,objSpeedBooster); break;
    case 13: instance_create(x,y,objHomingMissileLauncher); break;
    case 14: instance_create(x,y,objNovaBeam); break;
    case 15: instance_create(x,y,objDiffuser); break;
    case 16: instance_create(x,y,objDarkBeam); break;
    case 17: instance_create(x,y,objLightBeam); break;
    case 19: instance_create(x,y,objLightsear); break;
    case 20: instance_create(x,y,objPowerBombItem); break;
    case 21: instance_create(x,y,objXRayVisor); break;
    case 22: instance_create(x,y,objScrewBomb); break;
    case 23: instance_create(x,y,objCorruptionSuit); break;
    case 24: instance_create(x,y,objPhazonBeam); break; 
    // - Expansions. -
    case 25: instance_create(x,y,objMissileExpansion); break;
    case 26: instance_create(x,y,objSuperMissileExpansion); break;
    case 27: instance_create(x,y,objPowerBombExpansion); break;
    case 28: instance_create(x,y,objEnergyTank); break;
    case 29: instance_create(x,y,objAccelTank); break;
    
    case 30: instance_create(x,y,objIceBeam); break; //Yeah, I forgot it.
}
instance_change(objItemCaseDestroy,1);

//  case 18: instance_create(x,y,objJetBoost); break; // No longer implemented. Only obtainable through debug and enabling.
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>MessageCheckDepth();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
if (global.debugmode = true)
{   
   draw_set_font(Default);
   draw_set_color(c_black);
   draw_text(x+10,y-10,item);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
