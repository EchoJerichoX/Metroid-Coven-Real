<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-350</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[0] = 2;
update = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Particle systems.
system = part_system_create(); // The system for the snow.
part_system_depth(system,-350); // Set the depth for snow.

// Snow settings.
snow = part_type_create();
part_type_alpha3(snow,0,0.4,0);
part_type_color_mix(snow,c_white,c_ltgray);
part_type_direction(snow,0,360,0,0.1);
part_type_life(snow,75,200);
part_type_speed(snow,0,0.3,0,0.1);
part_type_shape(snow,pt_shape_snow);
part_type_size(snow,0.075,0.15,-0.0004,0);
part_type_orientation(snow,0,360,choose(-0.1,0.1),0.1,1);

// Particle emitters.
snowe = part_emitter_create(system);
var r1,r2,r3,r4,bonusrange;
bonusrange = 90;
r1 = view_xview[0]+110-bonusrange; // X_min.
r2 = view_xview[0]+view_wview[0]-110+bonusrange; // X_max.
r3 = view_yview[0]+41-bonusrange; // Y_min.
r4 = view_yview[0]+view_hview[0]-19+bonusrange; // Y_max.
part_emitter_region(system,snowe,r1,r2,r3,r4,ps_shape_rectangle,ps_distr_linear);
part_emitter_stream(system,snowe,snow,2); // Starts streaming the snow.

// "Fast forward" the snow's movement so it's not behind when first shown.
repeat(1000) { part_system_update(system); } 
update = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Set particle locations. Visible screen plus variable "bonusrange" in every direction.
if (update = 1) then
{
   var r1,r2,r3,r4,bonusrange;
   bonusrange = 90;
   r1 = view_xview[0]+110-bonusrange; // X_min.
   r2 = view_xview[0]+view_wview[0]-110+bonusrange; // X_max.
   r3 = view_yview[0]+41-bonusrange; // Y_min.
   r4 = view_yview[0]+view_hview[0]-19+bonusrange; // Y_max.
   
   part_emitter_region(system,snowe,r1,r2,r3,r4,ps_shape_rectangle,ps_distr_linear);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>part_type_destroy(snow);
part_emitter_destroy(system,snowe);
part_system_destroy(system);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>part_type_destroy(snow);
part_emitter_destroy(system,snowe);
part_system_destroy(system);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
