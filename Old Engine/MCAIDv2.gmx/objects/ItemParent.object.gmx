<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>6</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = .25;
switch (object_index)
{
   case objMorphBall:
      image_speed = 0;
      alarm[0] = random(120)+30;
      break;
   case objEnergyTank:
   case objAccelTank:
      image_speed = .5;
      break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (object_index = objMorphBall) image_speed = .5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objPlayer">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// * Acquisition Sprites *
with (instance_create(x,y,objItemAcquired))
{
   switch (other.object_index)
   {
      // Beams.
      case objWaveBeam: sprite_index = sprWaveBeamAc; break;
      case objPlasmaBeam: sprite_index = sprPlasmaBeamAc; break;
      case objSpazerBeam: sprite_index = sprSpazerBeamAc; break;
      case objPulseBeam: sprite_index = sprPulseBeamAc; break;
      case objIceBeam: sprite_index = sprIceBeamAc; break;
      case objNovaBeam: sprite_index = sprNovaBeamAc; break;
      case objDarkBeam: sprite_index = sprDarkBeamAc; break;
      case objLightBeam: sprite_index = sprLightBeamAc; break;
      case objPhazonBeam: sprite_index = sprPhazonBeamAc; break;
      // Weapons.
      case objMissileLauncher:
      case objHomingMissileLauncher:
      case objMissileExpansion:
         sprite_index = sprMissileLauncherAc; break;
      case objSuperMissileLauncher:
      case objDiffusionMissileLauncher:
      case objSuperMissileExpansion:
         sprite_index = sprSuperMissileLauncherAc; break;
      case objDiffuser: sprite_index = sprDiffuserAc; break;
      // Suits.
      case objGravitySuit:
      case objPhazonSuit:
      case objCorruptionSuit:
      // Addons.
      case objMorphBall: sprite_index = sprMorphBallAc; break;
      case objBombItem: sprite_index = sprBombItemAc; break;
      case objPowerBombItem:
      case objScrewBombItem:
      case objPowerBombExpansion:
         sprite_index = sprPowerAndScrewBombItemAc; break;
      case objSpeedBooster: sprite_index = sprSpeedBoosterAc; break;
      case objLightsear: sprite_index = sprLightsearAc; break;
      // Visors.
      case objXRayVisor: sprite_index = sprXRayVisorAc; break;
      // Other.
      case objEnergyTank:
      case objAccelTank:
         sprite_index = sprTankAc; break;
   }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// * Generated Messages *
with (instance_create(0,0,messageGen)) 
{
   switch (other.object_index)
   {
      // Beams.
      case objWaveBeam: text = "Wave Beam acquired!#Press -2- or use mouse-scrolling to activate."; break;
      case objPlasmaBeam: text = "Plasma Beam acquired!#Press -3- or use mouse-scrolling to activate."; break;
      case objSpazerBeam: text = "Spazer Beam acquired!#Press -4- or use mouse-scrolling to activate."; break;
      case objPulseBeam: text = "Pulse Beam acquired!#Press -5- or use mouse-scrolling to activate."; break;
      case objIceBeam: text = "Ice Beam acquired!#Press -6- or use mouse-scrolling to activate."; break;
      case objNovaBeam: text = "Nova Beam acquired!#Press -7- or use mouse-scrolling to activate."; break;
      case objDarkBeam: text = "Dark Beam acquired!#Press -8- or use mouse-scrolling to activate."; break;
      case objLightBeam: text = "Light Beam acquired!#Press -9- or use mouse-scrolling to activate."; break;
      case objPhazonBeam: text = "Phazon Beam acquired!#Press -0- or use mouse-scrolling to activate."; break;
      // Weapons.
      case objMissileLauncher: text = "Missile Launcher acquired!#Press and hold -Shift- to activate."; break;
      case objSuperMissileLauncher: text = "Super Missile Launcher acquired!#Press -CTRL- to select, then press and hold -Shift- to activate."; break;
      case objHomingMissileLauncher: text = "Homing Missile acquired!#Press -CTRL- to select, then press and hold -Shift- to activate.#Consumes 2 Missiles."; break;
      case objDiffusionMissileLauncher: text = "Diffusion Missile acquired!#Press -CTRL- to select, then press and hold -Shift- to activate.#Consumes 2 Super Missiles."; break;
      case objDiffuser: text = "Diffuser acquired!#Charge Beam attacks now have a damaging explosion radius."; break;
      // Suits.
      case objGravitySuit: text = "Gravity Suit acquired!#Press -F3- to activate or click the suit icon on the right HUD."; break;
      case objPhazonSuit: text = "Phazon Suit acquired!#Press -F4- to activate or click the suit icon on the right HUD."; break;
      case objCorruptionSuit: text = "Corruption Suit acquired!#Press -F5- to activate or click the suit icon on the right HUD.#With full Phazon reserves, press -R- to activate hypermode."; break;
      // Addons.
      case objMorphBall: text = "Morph Ball acquired!#Press -Z- to enter and exit Morph Ball mode."; break;
      case objBombItem: text = "Morph Ball Bomb acquired!#Press -Left click- while in Morph Ball mode to use."; break;
      case objPowerBombItem: text = "Power Bomb acquired!#Press -Right click- while in Morph Ball mode to use."; break;
      case objScrewBombItem: text = "Screw Bomb acquired!#Press -CTRL- to select while in Morph Ball mode, then press -Right click- to use.#Consumes 2 Power Bombs."; break;
      case objSpeedBooster: text = "Speed Booster acquired!#Run continuously in one direction to activate."; break;
      case objLightsear: text = "Lightsear acquired!#Press -Q- or -Middle click- to activate."; break;
      // Visors.
      case objXRayVisor:  text = "X-Ray Visor acquired!#Press -C- to activate."; break;
      // Other.
      case objMissileExpansion: text = "Missile expansion acquired!#Missile capacity increased by 5."; break;
      case objSuperMissileExpansion: text = "Super Missile expansion acquired!#Super Missile capacity increased by 2."; break;
      case objPowerBombExpansion: text = "Power Bomb expansion acquired!#Power Bomb capacity increased by 1."; break;
      case objEnergyTank: text = "Energy tank acquired!#Maximum energy inreased by 100. Energy fully restored."; break;
      case objAccelTank: text = "Accel tank acquired!#Charge rate increased. Various suit speed enhancements applied."; break;
   }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// * Item Activations *

switch (object_index)
{
   // Beams.
   case objWaveBeam: global.wavebeamavail = true; break;
   case objPlasmaBeam: global.plasmabeamavail = true; break;
   case objSpazerBeam: global.spazerbeamavail = true; break;
   case objPulseBeam: global.pulsebeamavail = true; break;
   case objIceBeam: global.icebeamavail = true; break;
   case objNovaBeam: global.novabeamavail = true; break;
   case objDarkBeam: global.darkbeamavail = true; break;
   case objLightBeam: global.lightbeamavail = true; break;
   case objPhazonBeam: global.phazonbeamavail = true; break;
   // Weapons.
   case objMissileLauncher:
      global.missilelauncheravail = true;
      global.missiles = global.maxmissiles;
      global.drawmissiletracker = true;
      break;
   case objSuperMissileLauncher:
      global.supermissilelauncheravail = true;
      global.supermissiles = global.maxsupermissiles;
      global.drawsupermissiletracker = true;
      break;
   case objHomingMissileLauncher:
      global.homingmissilelauncheravail = true;
      global.drawhmissiletracker = true;
      break;
   case objDiffusionMissileLauncher:
      global.diffusionmissilelauncheravail = true;
      global.drawdiffusionmissiletracker = true;
      break;
   case objDiffuser: global.diffuseravail = true; break;
   // Suits.
   case objGravitySuit: global.gravitysuitavail = true; break;
   case objPhazonSuit: global.phazonsuitavail = true; break;
   case objCorruptionSuit: global.corruptionsuitavail = true; break;
   // Addons.
   case objMorphBall: global.morphballavail = true; break;
   case objBombItem: global.bombavail = true; break;
   case objPowerBombItem:
      global.powerbombavail = true;
      global.drawpowerbombtracker = true;
      break;
   case objScrewBombItem:
      global.screwbombavail = true;
      global.drawscrewbombtracker = true;
      break;
   case objSpeedBooster: global.speedboosteravail = true; break;
   case objLightsear: global.lightsearavail = true; break;
   // Visors.
   case objXRayVisor:  global.xrayvisoravail = true; break;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// * Acquisition Themes *

switch (object_index)
{
   // Beams, weapons, addons and visors.
   case objWaveBeam:
   case objPlasmaBeam:
   case objSpazerBeam:
   case objPulseBeam:
   case objIceBeam:
   case objNovaBeam:
   case objDarkBeam:
   case objLightBeam:
   case objPhazonBeam:
   // ---
   case objMissileLauncher:
   case objSuperMissileLauncher:
   case objHomingMissileLauncher:
   case objDiffusionMissileLauncher:
   case objDiffuser:
   // ---
   case objMorphBall:
   case objBombItem:
   case objPowerBombItem:
   case objScrewBombItem:
   case objSpeedBooster:
   case objLightsear:
   // ---.
   case objXRayVisor:
      if (sound_isplaying(GetWeapon)) sound_stop(GetWeapon);
      sound_play(GetWeapon);
      break;
   // Suits.
   case objGravitySuit:
   case objPhazonSuit:
   case objCorruptionSuit:
      if (sound_isplaying(GetSuit)) sound_stop(GetSuit);
      sound_play(GetSuit);
      break;
   // Expansions.
   case objMissileExpansion:
   case objSuperMissileExpansion:
   case objPowerBombExpansion:
   case objEnergyTank:
   case objAccelTank:
      if (sound_isplaying(GetMinor)) sound_stop(GetMinor);
      sound_play(GetMinor);
      break;
      
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// * Actions for Expansions *
switch (object_index)
{
   case objMissileExpansion:
      global.maxmissiles += 5;
      global.missiles += 5;
      //-------------------------------------------------------
      // Check current room to figure out which variable to set.
      //-------------------------------------------------------
      switch (global.curroom)
      {
         case 2: global.mexo1 = 1; break;
         case 9: global.mexo2 = 1; break;
         case 11: global.mexo4 = 1; break;
         case 12: global.mexo3 = 1; break;
         case 13: global.mexo5 = 1; break;
         case 16: global.mexo6 = 1; break;
         case 17: global.mexo7 = 1; break;
      }
      break;
   case objSuperMissileExpansion:
      global.maxsupermissiles += 2;
      global.supermissiles += 2;
      //-------------------------------------------------------
      //Check current room to figure out which variable to set.
      //-------------------------------------------------------
      switch (global.curroom)
      {
         case 6: global.sexo1 = 1; break;
         case 12: global.sexo2 = 1; break;
         case 15: global.sexo3 = 1; break;
      }
      break;
   case objPowerBombExpansion:
      global.maxpowerbombs += 1;
      global.powerbombs += 1;
      //-------------------------------------------------------
      //Check current room to figure out which variable to set.
      //-------------------------------------------------------
      switch (global.curroom)
      {
         case 6: global.pexo1 = 1; break;
      }
      break;
   case objEnergyTank:
      if (global.maxetanks &lt; 12) global.maxetanks += 1;
      health = global.maxhealth;
      global.drawtanks += 1;
      global.etanks = global.maxetanks;
      if (sound_isplaying(LowOne)) sound_stop(LowOne);
      if (sound_isplaying(LowTwo)) sound_stop(LowTwo);
      //-------------------------------------------------------
      //Check current room to figure out which variable to set.
      //-------------------------------------------------------
      switch (global.curroom)
      {
         case 2: global.eto1 = 1; break;
         case 7: global.eto2 = 1; break;
         case 11: global.eto3 = 1; break;
      }
      break;
   case objAccelTank:
      if (global.accel &lt; 2) global.accel += .25;
      //-------------------------------------------------------
      //Check current room to figure out which variable to set.
      //-------------------------------------------------------
      switch (global.curroom)
      {
         case 5: global.ato1 = 1; break;
         case 12: global.ato2 = 1; break;
      }
      break;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// * End *
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch (object_index)
{
   case objMorphBall:
      image_speed = 0;
      alarm[0] = random(120)+30;
      break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
