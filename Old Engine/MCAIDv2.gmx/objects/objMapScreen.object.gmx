<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-500</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ResetMap()
/*
This object creates the map blocks, it's divided in columns, cause GM
doesn't seem to like nested for loops
Anyway, by the time you get here, there should be some map data
Since we're starting from scratch, I included the dialog to open a map file
*/
//execute_file(get_open_filename('map file|*.txt',"")) //Remove this one and use your own map!

//we need to know where Samus is... so we can draw the white square thingie right
//global.mapposx=10
//global.mapposy=15
i=0
j=0
alarm[0]=2 //You'll find alarms on create events, these are here to sync the map creation with your transition
//background_assign(0,MapBG);
//background_visible[0] = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Wherever you see 80 and 60, those are the dimensions of my map (measured in blocks)
//Feel free to just use what you need
if i&lt;45 {
 j=0
 repeat(45)
 {
  //The global.dmap vars are used to determine if the player has seen the part of the map
  //I added this line so each block actually shows on screen
//  global.dmap[i,j]=1 //Remove this line, use your own discovered data!
 
  mystr=string(global.map[i,j])
  if mystr!="0" instance_create(i*8,j*8,objMapScreenBlock)
  j+=1
 }
}
//
  instance_create(i*8,0,objMapBlockEffect) //This is a generic looking white line, replace with your cool gfx!
  //
i+=1
if i=45 {
 instance_destroy()
 }
alarm[0]=1
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
