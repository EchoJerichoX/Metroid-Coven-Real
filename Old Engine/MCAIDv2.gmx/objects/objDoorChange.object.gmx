<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Variable "state".
// 0 = Opening.
// 1 = Open.
// 2 = Closing.
state = 0;
image_speed = .5;
dir = 0;
beamtype = 0;
alarm[1] = 1;
sound_play(Open);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch (dir)
{
   case 1:
      if (beamtype = 0)
      or (beamtype = 3)
      or (beamtype = 4)
      or (beamtype = 5) instance_change(objBlueDoorDown,1);
      if (beamtype = 1) instance_change(objWaveDoorDown,1);
      break;
   case 2:
      if (beamtype = 0)
      or (beamtype = 3)
      or (beamtype = 4)
      or (beamtype = 5) instance_change(objBlueDoorLeft,1);
      if (beamtype = 1) instance_change(objWaveDoorLeft,1);
      break;
   case 3:
      if (beamtype = 0)
      or (beamtype = 3)
      or (beamtype = 4)
      or (beamtype = 5) instance_change(objBlueDoorRight,1);
      if (beamtype = 1) instance_change(objWaveDoorRight,1);
      break;
   case 4:
      if (beamtype = 0)
      or (beamtype = 3)
      or (beamtype = 4)
      or (beamtype = 5) instance_change(objBlueDoorUp,1);
      if (beamtype = 1) instance_change(objWaveDoorUp,1);
      break;
}
break;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch (sprite_index)
{
   case sprDoorOpenDown:
      dir = 1; break;
   case sprDoorOpenLeft:
      dir = 2; break;
   case sprDoorOpenRight:
      dir = 3; break;
   case sprDoorOpenUp:
      dir = 4; break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(objPlayer)) then
{
    if (point_distance(x,y,objPlayer.x,objPlayer.y) &lt; 50) then
      { alarm[0] = 1; exit; }
}
/*if (instance_exists(objSpacePirate))
{
    var xx,yy;
    xx = instance_nearest(x,y,objSpacePirate).x;
    yy = instance_nearest(x,y,objSpacePirate).y;
    if (point_distance(x,y,xx,yy) &lt; 50) then
       { alarm[0] = 1; exit; }
}*/
image_speed = .5;
switch (dir)
{
   case 1: // Down.
      sprite_index = sprDoorCloseDown; break;
   case 2: // Left.
      sprite_index = sprDoorCloseLeft; break;
   case 3: // Right.
      sprite_index = sprDoorCloseRight; break;
   case 4: // Up.
      sprite_index = sprDoorCloseUp; break;
}
state = 2;
sound_play(Close);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (state = 2) and (image_index = 2) //Closing.
   { state = 3; alarm[2] = 2; }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (state = 0) then // Opening.
{
      state = 1;
      sprite_index = blank;
      alarm[0] = 250;
      break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
if (global.debugmode)
{
   draw_text(x+7,y-20,beamtype);
   draw_text(x+7,y-30,state);
   draw_text(x+7,y-40,dir);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
