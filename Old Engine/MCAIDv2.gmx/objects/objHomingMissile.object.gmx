<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprHomingMissile</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>6</depth>
  <persistent>0</persistent>
  <parentName>HomingMissileParent</parentName>
  <maskName>sprWeaponMask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>speed = 3.5;
alarm[0] = 4.5;
image_angle = direction;
image_speed = .25;
global.homing = true;
global.missiletime = 100;
alarm[1] = 2;
playlowsound = true;
hiddenfade=0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.homing = false;
global.goback = true;
global.missiletime = 0;
if (sound_isplaying(LowFuel)) then
{
   sound_stop(LowFuel);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// MUST be multiples of .5 otherwise the
// sprite-based text will bug.
switch (global.accel)
{
    case 1:
        global.missiletime -= 2.5; break;
    case 1.25:
        global.missiletime -= 2; break;
    case 1.5:
        global.missiletime -= 1.5; break;
    case 1.75:
        global.missiletime -= 1; break;
    case 2:
        global.missiletime -= .5; break;
}
if (global.missiletime &lt;= 0) global.missiletime = 0;
alarm[1] = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>s = instance_create(x,y,objMissileSmoke);
s.sprite_index = sprMissileSmoke;
alarm[0] = 4.5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if collision_point(x,y,objHideMap,true,true)
{
   global.reveal = true;
   if hiddenfade&lt;0 {hiddenfade=0}
   hiddenfade+=.05
   if hiddenfade&gt;1 {hiddenfade=1}
}
else
{
   if hiddenfade&gt;1 {hiddenfade=1}
   hiddenfade-=.05
   if hiddenfade&lt;0 {hiddenfade=0}
}
LightCircle(x,y,(global.range/2+15)*.3+global.missiletime,.5);
RevealCircle(x,y,(global.range/3)*.3+global.missiletime,.9*hiddenfade);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var DiffDir;
DiffDir=point_direction(x,y,mouse_x,mouse_y)-direction;
if abs(DiffDir)&lt;=180 direction+=median(-5,5,DiffDir) else direction+=median(-5,5,DiffDir-sign(DiffDir)*360);
image_angle=direction;
if (global.missiletime &lt;= 0) then
{
   Impact2(sprHomingMissileFlak,2);
   Impact2(sprGrayFlak,6);
   instance_create(x,y,objMissileExplosion);
   sound_play(Explosion6);
   instance_destroy();
}
if (global.missiletime &lt; 21) 
and (playlowsound) then
{
   sound_loop(LowFuel);
   playlowsound = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
