<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-500</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>go = true;
if (instance_exists(PlayerParent)) then
{
   x = PlayerParent.x;
   y = PlayerParent.y;
}
background_x[2] = view_xview[0];
background_y[2] = view_yview[0];
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(PlayerParent)) then
{
   x = PlayerParent.x;
   y = PlayerParent.y;
}
if (global.missilelauncheravail) global.drawmissiletracker = true;
if (global.supermissilelauncheravail) global.drawsupermissiletracker = true;
if (global.homingmissilelauncheravail) global.drawhmissiletracker = true;
if (global.diffusionmissilelauncheravail) global.drawdiffusionmissiletracker = true;
if (global.powerbombavail) global.drawpowerbombtracker = true;
if (global.screwbombavail) global.drawscrewbombtracker = true;

//background_x[2] = view_xview[0];
//background_y[2] = view_yview[0];
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.healthstr = string(health);
global.missilesstr = string(global.missiles);
global.maxmissilesstr = string(global.maxmissiles);
global.supermissilesstr = string(global.supermissiles);
global.maxsupermissilesstr = string(global.maxsupermissiles);
global.powerbombsstr = string(global.powerbombs);
global.maxpowerbombsstr = string(global.maxpowerbombs);
global.overheatstr = string(round(global.overheat));
global.missiletimestr = string(global.missiletime);
global.maxetanksstr = string(global.maxetanks);
global.weaponspeedstr = string(global.weaponspeed);
global.accelratestr = string(global.accel);
global.maxetanksstr = string(global.maxetanks);

/*if (instance_exists(PlayerParent)) */DrawString(global.healthstr,view_xview[0]+162,view_yview[0]+31,0);

if (global.maxetanks &gt; 0) DrawString(global.maxetanksstr,view_xview[0]+102,view_yview[0]+view_hview[0]-31,1);

DrawString(global.weaponspeedstr,view_xview[0]+102,view_yview[0]+view_hview[0]-17,1);

DrawString(global.accelratestr,view_xview[0]+102,view_yview[0]+view_hview[0]-61,1);

if (global.missilelauncheravail) then
{
   DrawString(global.missilesstr,view_xview[0]+252,view_yview[0]+31,0);
   DrawString(global.maxmissilesstr,view_xview[0]+102,view_yview[0]+view_hview[0]-173,1);
}
if (global.supermissilelauncheravail) then
{
   DrawString(global.supermissilesstr,view_xview[0]+286,view_yview[0]+31,0);
   DrawString(global.maxsupermissilesstr,view_xview[0]+102,view_yview[0]+view_hview[0]-159,1);
}
if (global.plasmabeamavail) then
{
   DrawString(global.overheatstr,view_xview[0]+96,view_yview[0]+view_hview[0]-131,1);
}
if (global.homingmissilelauncheravail) then
{
   DrawString(global.missiletimestr,view_xview[0]+96,view_yview[0]+view_hview[0]-117,1);
}
if (global.powerbombavail) then
{
   DrawString(global.powerbombsstr,view_xview[0]+320,view_yview[0]+31,0);
   DrawString(global.maxpowerbombsstr,view_xview[0]+102,view_yview[0]+view_hview[0]-145,1);
}
if (go) then
{
   if (!instance_exists(HUDMaxEnergyTanks)) instance_create(x,y,HUDMaxEnergyTanks);
   if (!instance_exists(HUDPhazon)) instance_create(x,y,HUDPhazon);
   if (!instance_exists(HUDPhazonMeter)) instance_create(x,y,HUDPhazonMeter);
   if (!instance_exists(pBombCounter)) instance_create(x,y,pBombCounter);
   if (!instance_exists(HUDWeaponSpeedTracker)) instance_create(x,y,HUDWeaponSpeedTracker);
   if (!instance_exists(HUDAccelRate)) instance_create(x,y,HUDAccelRate);
   if (!instance_exists(buttonLogbook)) instance_create(x,y,buttonLogbook);
   if (!instance_exists(buttonOptions)) instance_create(x,y,buttonOptions);
   if (!instance_exists(buttonControls)) instance_create(x,y,buttonControls);
   if (!instance_exists(buttonInformation)) instance_create(x,y,buttonInformation);
   if (!instance_exists(buttonExit)) instance_create(x,y,buttonExit);
   if (!instance_exists(UILeft)) instance_create(x,y,UILeft);
   if (!instance_exists(UIRight)) instance_create(x,y,UIRight);
   if (!instance_exists(MouseLockTracker)) instance_create(x,y,MouseLockTracker);
   if (!instance_exists(ViewShiftTracker)) instance_create(x,y,ViewShiftTracker);
   if (!instance_exists(UICurrentSuit)) instance_create(x,y,UICurrentSuit);
   if (!instance_exists(UICannon)) instance_create(x,y,UICannon);
   if (!instance_exists(UISuitSelVaria)) instance_create(x,y,UISuitSelVaria);
   if (!instance_exists(UIVariaSuit)) instance_create(x,y,UIVariaSuit);
   if (!instance_exists(UIPowerBeam)) instance_create(x,y,UIPowerBeam);
   if (!instance_exists(UIScanVisor)) instance_create(x,y,UIScanVisor);
   if (!instance_exists(UICombatVisor)) instance_create(x,y,UICombatVisor);
   if (!instance_exists(UISuitSelVaria))  instance_create(x,y,UISuitSelVaria);
   if (!instance_exists(UIPowerSuit))  instance_create(x,y,UIPowerSuit);
   if (!instance_exists(UISpazerBeam)) and (global.spazerbeamavail = true) instance_create(x,y,UISpazerBeam);
   if (!instance_exists(UIPulseBeam)) and (global.pulseavail = true) instance_create(x,y,UIPulseBeam);
   if (global.gravitysuitavail = true) and (!instance_exists(UISuitSelGravity))  instance_create(x,y,UISuitSelGravity);
   if (global.phazonsuitavail = true) and (!instance_exists(UISuitSelPhazon)) instance_create(x,y,UISuitSelPhazon);
   if (global.corruptionsuitavail = true) and (!instance_exists(UISuitSelCorruption))  instance_create(x,y,UISuitSelCorruption);
   if (global.phazonsuitavail = true) and (!instance_exists(UIPhazonSuit)) instance_create(x,y,UIPhazonSuit);
   if (global.corruptionsuitavail = true) and (!instance_exists(UICorruptionSuit)) instance_create(x,y,UICorruptionSuit);
   if (global.gravitysuitavail = true) and (!instance_exists(UIGravitySuit)) instance_create(x,y,UIGravitySuit);
   if (global.wavebeamavail = true) and (!instance_exists(UIWaveBeam)) instance_create(x,y,UIWaveBeam);
   if (global.bombavail = true) and (!instance_exists(UIBomb)) instance_create(x,y,UIBomb);
   if (global.plasmabeamavail = true) and (!instance_exists(UIPlasmaBeam)) instance_create(x,y,UIPlasmaBeam);
   if (global.plasmabeamavail = true) and (!instance_exists(HeatTracker)) instance_create(x,y,HeatTracker);
   if (global.morphballavail = true) and (!instance_exists(UIMorphBall)) instance_create(x,y,UIMorphBall);
   if (global.missilelauncheravail = true) and (!instance_exists(UIMissile)) instance_create(x,y,UIMissile);
   if (global.missilelauncheravail = true) and (!instance_exists(MaxMissileTracker)) instance_create(x,y,MaxMissileTracker);
   if (global.supermissilelauncheravail = true) and (!instance_exists(UISuperMissile)) instance_create(x,y,UISuperMissile);
   if (global.supermissilelauncheravail = true) and (!instance_exists(MaxSMissileTracker)) instance_create(x,y,MaxSMissileTracker);
   if (global.bombavail = true) and (!instance_exists(bombTracker)) instance_create(x,y,bombTracker);
   if (global.icebeamavail = true) and (!instance_exists(UIIceBeam)) instance_create(x,y,UIIceBeam);
   if (global.novabeamavail = true) and (!instance_exists(UINovaBeam)) instance_create(x,y,UINovaBeam);
   if (global.darkbeamavail = true) and (!instance_exists(UIDarkBeam)) instance_create(x,y,UIDarkBeam);
   if (global.lightbeamavail = true) and (!instance_exists(UILightBeam)) instance_create(x,y,UILightBeam);
   if (global.phazonbeamavail = true) and (!instance_exists(UIPhazonBeam)) instance_create(x,y,UIPhazonBeam);
   if (global.homingmissilelauncheravail = true) and (!instance_exists(HMissileTimeTracker)) instance_create(x,y,HMissileTimeTracker);
   if (global.homingmissilelauncheravail = true) and (!instance_exists(UIHomingMissile)) instance_create(x,y,UIHomingMissile);
   if (global.diffusionmissilelauncheravail = true) and (!instance_exists(UIDiffusionMissile)) instance_create(x,y,UIDiffusionMissile);
   if (global.lightsearavail = true) and (!instance_exists(UILightsear)) instance_create(x,y,UILightsear);
   if (global.powerbombavail = true) and (!instance_exists(UIPowerBomb)) instance_create(x,y,UIPowerBomb);
   if (global.powerbombavail = true) and (!instance_exists(MaxPBombTracker)) instance_create(x,y,MaxPBombTracker);
   if (global.speedboosteravail = true) and (!instance_exists(UISpeedBooster)) instance_create(x,y,UISpeedBooster);
   if (global.screwbombavail = true) and (!instance_exists(UIScrewBomb)) instance_create(x,y,UIScrewBomb);
   if (global.jetboostavail = true) and (!instance_exists(UIJetBoost)) instance_create(x,y,UIJetBoost);
   if (global.diffuseravail = true) and (!instance_exists(UIDiffuser)) instance_create(x,y,UIDiffuser);
   if (global.xrayvisoravail = true) and (!instance_exists(UIXRayVisor)) instance_create(x,y,UIXRayVisor);
   if (!instance_exists(currentWeapon)) instance_create(view_xview[0],view_yview[0],currentWeapon);
   if (!instance_exists(HUD)) instance_create(view_xview[0],view_yview[0],HUD);
   if (global.plasmabeamavail) and (!instance_exists(HUDHeat)) instance_create(view_xview[0],view_yview[0],HUDHeat);
   if (global.homingmissilelauncheravail) and (!instance_exists(HUDFuel)) instance_create(view_xview[0],view_yview[0],HUDFuel);
   if (!instance_exists(HUDCharge)) instance_create(view_xview[0],view_yview[0],HUDCharge);
   if (global.lightsearavail) and (!instance_exists(HUDLightsear)) instance_create(view_xview[0],view_yview[0],HUDLightsear);
   switch (global.maxetanks)
   {
      case 0: if (!instance_exists(energyTanks0)) instance_create(view_xview[0],view_yview[0],energyTanks0); break;
      case 1: if (!instance_exists(energyTanks1)) instance_create(view_xview[0],view_yview[0],energyTanks1); break;
      case 2: if (!instance_exists(energyTanks2)) instance_create(view_xview[0],view_yview[0],energyTanks2); break;
      case 3: if (!instance_exists(energyTanks3)) instance_create(view_xview[0],view_yview[0],energyTanks3); break;
      case 4: if (!instance_exists(energyTanks4)) instance_create(view_xview[0],view_yview[0],energyTanks4); break;
      case 5: if (!instance_exists(energyTanks5)) instance_create(view_xview[0],view_yview[0],energyTanks5); break;
      case 6: if (!instance_exists(energyTanks6)) instance_create(view_xview[0],view_yview[0],energyTanks6); break;
      case 7: if (!instance_exists(energyTanks7)) instance_create(view_xview[0],view_yview[0],energyTanks7); break;
      case 8: if (!instance_exists(energyTanks8)) instance_create(view_xview[0],view_yview[0],energyTanks8); break;
      case 9: if (!instance_exists(energyTanks9)) instance_create(view_xview[0],view_yview[0],energyTanks9); break;
      case 10: if (!instance_exists(energyTanks10)) instance_create(view_xview[0],view_yview[0],energyTanks10); break;
      case 11: if (!instance_exists(energyTanks11)) instance_create(view_xview[0],view_yview[0],energyTanks11); break;
      case 12: if (!instance_exists(energyTanks12)) instance_create(view_xview[0],view_yview[0],energyTanks12); break;
   }
   if (!instance_exists(scannerTracker)) instance_create(view_xview[0],view_yview[0],scannerTracker);
   if (!instance_exists(objPlayerOverheatWatch)) instance_create(view_xview[0],view_yview[0],objPlayerOverheatWatch);
   if (!instance_exists(UISpeedBoosterBar)) instance_create(view_xview[0],view_yview[0],UISpeedBoosterBar);
   if (!instance_exists(UILightsearBar)) instance_create(view_xview[0],view_yview[0],UILightsearBar);
   if (global.missilelauncheravail) and (!instance_exists(missileTracker)) instance_create(view_xview[0],view_yview[0],missileTracker);
   if (global.supermissilelauncheravail) and (!instance_exists(superMissileTracker)) instance_create(view_xview[0],view_yview[0],superMissileTracker);
   if (global.homingmissilelauncheravail) and (!instance_exists(hMissileTracker)) instance_create(view_xview[0],view_yview[0],hMissileTracker);
   if (global.diffusionmissilelauncheravail) and (!instance_exists(dMissileTracker)) instance_create(view_xview[0],view_yview[0],dMissileTracker);
   if (global.powerbombavail) and (!instance_exists(pBombTracker)) instance_create(view_xview[0],view_yview[0],pBombTracker);
   if (global.screwbombavail) and (!instance_exists(sBombTracker)) instance_create(view_xview[0],view_yview[0],sBombTracker);
   //go = false;
}
if (global.drawmissiletracker) then
{
   if (!instance_exists(missileTracker)) instance_create(view_xview[0],view_yview[0],missileTracker);
   global.drawmissiletracker = false;
   global.drawmisscount = true;
}
if (global.drawsupermissiletracker) then
{
   if (!instance_exists(superMissileTracker)) instance_create(view_xview[0],view_yview[0],superMissileTracker);
   global.drawsupermissiletracker = false;
   global.drawsupermisscount = true;
}
if (global.drawhmissiletracker) then
{
   if (!instance_exists(hMissileTracker)) instance_create(view_xview[0],view_yview[0],hMissileTracker);
   global.drawhmissiletracker = false;
}
if (global.drawdiffusionmissiletracker) then
{
   if (!instance_exists(dMissileTracker)) instance_create(view_xview[0],view_yview[0],dMissileTracker);
   global.drawdiffusionmissiletracker = false;
}
if (global.drawpowerbombtracker) then
{
   if (!instance_exists(pBombTracker)) instance_create(view_xview[0],view_yview[0],pBombTracker);
   global.drawpowerbombtracker = false;
   global.drawpbcount = true;
}
if (global.drawscrewbombtracker) then
{
   if (!instance_exists(sBombTracker)) instance_create(view_xview[0],view_yview[0],sBombTracker);
   global.drawscrewbombtracker = false;
}

var angle,xxx,yyy;
if (instance_exists(PlayerParent)) angle = PlayerParent.image_angle;
else angle = 45;
xxx = view_xview[0]+view_wview[0]-28;
yyy = view_yview[0]+32;
draw_sprite(HUDCompass,-1,xxx,yyy);
draw_sprite_ext(HUDCompassPointer,-1,xxx,yyy,1,1,angle,c_white,1);

background_x[2] = view_xview[0];
background_y[2] = view_yview[0];
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
